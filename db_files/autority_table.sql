-- MySQL dump 10.10
--
-- Host: localhost    Database: autority_db
-- ------------------------------------------------------
-- Server version	5.0.22-community-nt

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `people`
--

DROP TABLE IF EXISTS `people`;
CREATE TABLE `people` (
  `PERSON_ID` int(11) NOT NULL auto_increment,
  `PERSON_PRIVILIGIES` varchar(255) NOT NULL,
  `PERSON_NAME` varchar(255) default NULL,
  `PERSON_SURENAME` varchar(255) default NULL,
  `PERSON_INFO` varchar(255) default NULL,
  `PERSON_LOGIN` varchar(255) default NULL,
  `PERSON_PASSWORD` varchar(255) default NULL,
  `PERSON_SUBJECTS` varchar(255) default NULL,
  `PERSON_GROUP` varchar(255) default NULL,
  `PERSON_TUTOR` varchar(255) default NULL,
  PRIMARY KEY  (`PERSON_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `people`
--


/*!40000 ALTER TABLE `people` DISABLE KEYS */;
LOCK TABLES `people` WRITE;
INSERT INTO `people` VALUES (1,'USER','Vasya','Pupkin','user','user','user','','null','null'),(2,'USER','Ivan','Ivanov','user','user2','user2','','null','null'),(3,'ADMIN','Admin','Admin','admin','admin','admin','',NULL,NULL),(4,'USER','Абитуриент 2008','a08cp001','user','a08cp001','yjqgplle','','null','null'),(5,'USER','Абитуриент 2008','a08cp002','user','a08cp002','knafggmq','','null','null'),(6,'USER','Абитуриент 2008','a08cp002','user','a08cp002','xcfrseve','','null','null'),(7,'USER','Абитуриент 2008','a08cp002','user','a08cp002','knafggmq','','null','null'),(8,'USER','Абитуриент 2008','a08cp003','user','a08cp003','xcfrseve','','null','null'),(9,'USER','Абитуриент 2008','a08cp004','user','a08cp004','bsggcgsi','','null','null'),(10,'USER','Абитуриент 2008','a08cp005','user','a08cp005','ijvqskud','','null','null'),(11,'USER','Абитуриент 2008','a08cp006','user','a08cp006','scehgevq','','null','null'),(12,'USER','Абитуриент 2008','a08cp007','user','a08cp007','rnuojmmf','','null','null'),(13,'USER','Абитуриент 2008','a08cp008','user','a08cp008','ngtneweh','','null','null'),(14,'USER','Абитуриент 2008','a08cp009','user','a08cp009','nfwjehyc','','null','null'),(15,'USER','Абитуриент 2008','a08cp010','user','a08cp010','yotkugyk','','null','null'),(16,'USER','Абитуриент 2008','a08cp011','user','a08cp011','ggowtnfq','','null','null'),(17,'USER','Абитуриент 2008','a08cp012','user','a08cp012','dykdrgka','','null','null'),(18,'USER','Абитуриент 2008','a08cp013','user','a08cp013','ifdptsfn','','null','null'),(19,'USER','Абитуриент 2008','a08cp014','user','a08cp014','siyjxxxs','','null','null'),(20,'USER','Абитуриент 2008','a08cp015','user','a08cp015','lyshfogu','','null','null'),(21,'USER','Абитуриент 2008','a08cp016','user','a08cp016','gfpunvem','','null','null'),(22,'USER','Абитуриент 2008','a08cp017','user','a08cp017','rkpmirvo','','null','null'),(23,'USER','Абитуриент 2008','a08cp018','user','a08cp018','bmqwkvcy','','null','null'),(24,'USER','Абитуриент 2008','a08cp019','user','a08cp019','obekxgco','','null','null'),(25,'USER','Абитуриент 2008','a08cp020','user','a08cp020','paojnmhj','','null','null'),(26,'USER','Абитуриент 2008','a08cp021','user','a08cp021','eqbgllnu','','null','null'),(27,'USER','Абитуриент 2008','a08cp022','user','a08cp022','icaqkfwt','','null','null'),(28,'USER','Абитуриент 2008','a08cp023','user','a08cp023','oqsbulvi','','null','null'),(29,'USER','Абитуриент 2008','a08cp024','user','a08cp024','oovdnhad','','null','null'),(30,'USER','Абитуриент 2008','a08cp025','user','a08cp025','qhltqexs','','null','null'),(31,'USER','Абитуриент 2008','a08cp026','user','a08cp026','yeloujci','','null','null'),(32,'USER','Абитуриент 2008','a08cp027','user','a08cp027','fsqetotv','','null','null'),(33,'USER','Абитуриент 2008','a08cp028','user','a08cp028','wqiolodi','','null','null'),(34,'USER','Абитуриент 2008','a08cp029','user','a08cp029','eginobqm','','null','null'),(35,'USER','Абитуриент 2008','a08cp030','user','a08cp030','mnayhpig','','null','null'),(36,'USER','Абитуриент 2008','a08cp031','user','a08cp031','sdnxuugn','','null','null'),(37,'USER','Абитуриент 2008','a08cp032','user','a08cp032','xocdglgc','','null','null'),(38,'USER','Абитуриент 2008','a08cp033','user','a08cp033','rhlasrqm','','null','null');
UNLOCK TABLES;
/*!40000 ALTER TABLE `people` ENABLE KEYS */;

--
-- Table structure for table `statistic`
--

DROP TABLE IF EXISTS `statistic`;
CREATE TABLE `statistic` (
  `SELF_ID` int(11) NOT NULL auto_increment,
  `PERSON_ID` int(11) default NULL,
  `QUESTION_ID` int(11) default NULL,
  `ANSWER` longtext,
  `DATE` bigint(20) default NULL,
  `TIME` int(11) default NULL,
  PRIMARY KEY  (`SELF_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `statistic`
--


/*!40000 ALTER TABLE `statistic` DISABLE KEYS */;
LOCK TABLES `statistic` WRITE;
INSERT INTO `statistic` VALUES (1,1,8,'МИНИСТЕРСТВО ОБРАЗОВАНИЯ И НАУКИ РОССИЙСКОЙ ФЕДЕРАЦИИ\r\nФедеральное агентство по образованию\r\nГосударственное образовательное учреждение высшего профессионального образования.\r\nСанкт-Петербургский государственный университет информационных технологий, механики и оптики\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nМЕТОДИЧЕСКИЕ УКАЗАНИЯ\r\nК ЛАБОРАТОРНЫМ РАБОТАМ\r\nПО ДИСЦИПЛИНЕ\r\n\r\nСД.04– Компьютерная обработка и распознавание изображений\r\nСанкт-Петербург\r\n2008\r\n \r\nМетодические указания к лабораторным работам по дисциплине «Компьютерная обработка и распознавание изображений»/В.Т. Фисенко, Т.Ю. Фисенко; ГУ ИТМО.-Санкт-Петербург, 2008\r\nСоставлены для проведения студентами лабораторных работ по исследованию методов квантования изображений, их восстановлению и масштабированию с помощью методов интерполяции, улучшению изображений с помощью методов линейной и нелинейной пространственной и частотной фильтрации, сокращению избыточности изображений с помощью методов сжатия изображений на основе дискретного косинусного и вейвлетного преобразований. Работы позволяют студентам глубже понять современные методы компьютерной обработки изображений, методы анализа изображений и оптимизации параметров разрабатываемых оптико-электронных систем.\r\n \r\n1	 Лабораторная работа № 1\r\nИсследование методов квантования цифровых сигналов изображений\r\nЦель работы – ознакомиться с методами квантования цифровых изображений, исследовать влияние нелинейных предыскажений на результаты квантования, определить число полезных разрядов при квантовании сигнала, пораженного шумом.\r\nЗадание по работе:\r\n	Изучить теоретическую часть работы.\r\n	Промоделировать квантование цифрового изображения, оценить субъективные и объективные ошибки квантования.\r\n	Выполнить расчет зависимости качества изображения при квантовании от числа уровней квантования, нелинейного предыскажения и наличия шума в сигнале.\r\n1.1	Теоретическая часть\r\n1.1.1	Введение\r\nДля получения цифрового сигнала из непрерывного сигнала необходимо кроме дискретизации по времени произвести квантование по амплитуде. Квантование состоит в том, что непрерывному по амплитуде сигналу ставится в соответствие конечное множество целочисленных значений сигнала, пропорциональных непрерывному значению.\r\nДля этого динамический диапазон сигнала   разбивается на конечное число интервалов - интервалов квантования. Каждому интервалу ставится в соответствие одно значение, называемое уровнем квантования, кодируемое двоичным кодом. Все значения сигнала, попадающие в некоторый интервал, обозначаются одним числом, определенным для данного интервала.\r\nПусть f  - амплитуда сигнала в дискретном представлении, f- значение сигнала, принадлежащее q-му интервалу квантования. При использовании L- разрядного кода число уровней квантования равно 2 .Ошибка квантования (шум квантования) может характеризоваться величиной:\r\n .	 (1.1)\r\nДисперсия ошибки   отличия f от его квантованного представления  :\r\n ,	 (1.2)\r\nгде ,  - границы q-го интервала квантования, p(f)- плотность вероятности распределения входного сигнала.\r\n1.1.2	Оптимальное квантование\r\nОптимальным будем считать такой выбор интервалов квантования и значений их представителей, при котором   минимальна.\r\nПусть плотность вероятности значений исходного сигнала постоянна в пределах интервала квантования, тогда \r\n  (1.3)\r\nОптимальное положение уровня квантования   в интервале ( , ) можно найти, решая задачу о минимуме ошибки как функции от  . Приравнивая нулю производную от   по \r\n , \r\nполучаем\r\n .	 (1.4)\r\nИз (1.4) оптимальное значение уровня квантования соответствует середине интервала квантования, при этом максимальная ошибка квантования внутри интервала составляет не более половины интервала квантования. \r\nПодставив выражения (1.4) в (1.3), получим \r\n 		 (1.5)\r\nДисперсия ошибки квантования \r\n 	 (1.6)\r\nВ общем случае оптимальное положение пороговых уровней и уровней квантования получают из точного уравнения ошибки квантования, полученного с учетом (1.2):\r\n 	 (1.7)\r\nДифференцируя   по переменным   и   и приравнивая производные нулю, получим систему уравнений:\r\n \r\nПосле преобразований, приходят к системе уравнений:\r\n\r\n ,	 (1.8)\r\nгде q=1..2 .\r\nРешая эти уравнения рекуррентным способом, для заданной плотности вероятностей находят оптимальные значения пороговых уровней и уровней квантования. Макс решил такую задачу для гауссовой плотности и составил таблицы размещения пороговых уровней, в зависимости от числа уровней квантования. На рис. 1 представлена амплитудная характеристика квантователя Макса [1] для трехразрядного представления сигнала.\r\n	Дисперсия ошибки квантования для оптимального квантователя уменьшается до значения:\r\n 	 (1.9)\r\n \r\nРисунок 1.1 Амплитудная характеристика оптимального квантователя Макса для трехразрядного кодирования при нормальном законе распределения амплитуды сигнала.\r\nДля частного случая равномерной плотности распределения сигнала, при которой \r\np(f)= =const,\r\nоптимальные значения уровней квантования из (1.8 б) определяются в соответствии с выражением:\r\n .\r\nОптимальные значения пороговых уровней в соответствии с (1.8 а)\r\n . \r\nСледовательно, при равномерной плотности сигнала изображения оптимальным является равномерное квантование, при котором интервал квантования:\r\n .	(1.10),\r\nА плотность распределения:\r\n .\r\nДисперсия шума квантования в этом случае из (1.9):\r\n 	 (1.11)\r\nОтношение сигнала к среднеквадратическому значению шума квантования в этом случае составляет \r\n 	 (1.12)\r\nИз (1.12) следует, что увеличение числа разрядов квантования на 1 приводит к повышению отношения сигнал/шум примерно на 6 дБ.\r\nСуществующие устройства осуществляют обычно равномерное квантование сигналов. Используя такие устройства, оптимальное квантование можно осуществить, если перед равномерным квантованием сигнал подвергнуть нелинейному преобразованию (предыскажению), формирующему сигнал с равномерной плотностью вероятности. \r\n1.1.3	Квантование сигнала при наличии шумов\r\nРассмотрим воздействие аддитивного шума на процесс квантования при равномерной амплитудной характеристике квантователя. \r\nВходной сигнал представим в виде\r\nu(t)=f(t)+n(t),\r\nгде f(t)- входной полезный сигнал; n(t)- аддитивный шум.\r\nКвантование считается безошибочным, если сигнал u(t) попадает в тот же интервал квантования, что и сигнал f(t). Если же сигнал u(t) попадает в другие интервалы квантования, то возникают дополнительные ошибки квантования, вызванные шумом. Количественную оценку влияния шума на квантование дал Фридман [2]. Построенная им кривая представлена на рисунке как кривая 0.\r\nПри построении этой кривой предполагается, что значения сигнала равновероятны в пределах диапазона квантования. Шум нормальный со среднеквадратическим значением  . Кривая соответствует вероятности правильного присвоения двоичного числа, соответствующего незашумленному сигналу с ошибкой  0  в зависимости от  , равного отношению шага квантования   к   шума. Фульц расширил рамки анализа, определив вероятность присвоения данного двоичного числа уровню, отличающемуся на величину  n  от правильного уровня.\r\nФормула интегрального распределения ошибок квантования, обусловленных шумом, имеет вид:\r\n ,\r\nгде	 ,\r\n =  ,	(1.13)\r\n - интеграл вероятностей.\r\nОпределим понятие L полезных разрядов. Если имеется L полезных разрядов, то это означает, что в результате действия шума вероятность правильного формирования (L+1) разряда составляет 0,5. То есть, если мы выбираем 8 полезных разрядов, то это означает, что 9-й разряд правильно не опознается, т.е. вероятность правильного прочтения этого разряда равна 0,5. Кривая  0 на рис. 2 показывает, что разряду L + 1 (вероятность 0,5) соответствует значение  =1,47. Значит, при L полезных разрядах ((L + 1)- й не нужен)  =1,47x2=2,94, т.е. шаг квантования должен быть в 2,94 раза больше среднеквадратического значения шума.\r\nКачество работы системы можно оценивать также по уровню шума, вводимого квантователями (аналого-цифровыми преобразователями). Мощность шума ( ), вносимого процессом квантования, определяется в соответствии с (1,11). Будем называть систему уравновешенной, если дисперсия шума квантования равна сумме дисперсий всех шумовых сигналов любого происхождения, генерируемых в системе до квантования, т.е. \r\n  или  .\r\nТаким образом, на основе двух критериев можно пользоваться общим правилом, согласно которому отношение шага квантования к среднеквадратическому значению шума примерно равно 3.\r\n \r\nРисунок 1.2 График зависимости вероятности квантования с точностью до   интервалов квантования от отношения интервала квантования к среднеквадратическому значению аддитивного шума  . Кривая 0 соответствует ошибке  , кривая 1 соответствует ошибке   и т.д. справа налево.\r\nПри n=0 кривая соответствует вероятности безошибочного квантования при наличии шума. Ее можно использовать для выбора числа уровней квантования при заданной мощности шума и требуемой достоверности отсчета.\r\n1.2	Экспериментальная часть\r\nВ данной работе исследуют равномерное квантование изображений. Оценивают зависимость эффективности квантования от числа уровней квантования, предыскажения изображения и наличия шума в изображении.\r\nДля выполнения работы необходимо промоделировать процессы квантования изображения и произвести оценку качества квантования.\r\nПорядок выполнения работы\r\n1	Выбрать исходное 8-ми разрядное изображение. В качестве изображения можно взять изображение «Лена» или другое портретное изображение.\r\n2	Выполнить квантование этого изображения на 16, 32, 64 и 128 уровней. \r\na)	Оценить размах сигнала  , его математическое ожидание  и среднеквадратическое значение  . \r\nb)	Вычислить теоретическое значение  , руководствуясь уравнением (1.11) для оптимального квантователя. При этом  , где L- число разрядов, например, при квантовании на 64 уровня (L=6)  4.\r\nc)	Оценить отношение сигнал/шум для оптимального квантования в соответствии с уравнением (1.12), учитывая реальный размах сигнала\r\n , дБ	 (1.14)\r\nd)	Оценить среднеквадратическое значение шума квантования как среднеквадратическое значение сигнала разности изображений квантованного и исходного  .\r\ne)	Оценить относительную среднеквадратическую ошибку в соответствии с формулой:\r\n 	 (1.15)\r\nf)	 Определить отношение дисперсии сигнала к дисперсии шума квантования по формуле:\r\n =2  /k,	(1.16)\r\nгде	 .\r\ng)	Оценить отношение сигнал/шум для квантованных изображений в соответствии с формулой (1.14).\r\nh)	На основании эксперимента построить графики зависимости отношения сигнал/шум и относительной среднеквадратической ошибки от числа уровней квантования и сравнить их с теоретическими оценками.\r\n3	Наложить на исходное изображение реализацию нормального шума (0, ) [3].\r\n4	Выполнить пункт 2 для этого изображения.\r\n5	Выполнить квантование исходного изображения и изображения с шумом на 8 уровней. Оценить, как влияет шум на формирование ложных контуров на изображении.\r\n6	Выполнить эквализацию гистограмм изображений. Выполнить квантование исходного и нелинейно преобразованного изображения на 8 уровней. Сравнить полученные изображения.\r\n7	Проанализировать полученные результаты, составить отчет о моделировании и выполненных исследованиях, сделать выводы по работе.\r\n1.3	 Библиографический список\r\n1)	Прэтт, У. Цифровая обработка изображений; Пер. с англ. — М.: Мир,1982.-Кн. 1-312с.\r\n2)	Горелик С.Л., Кац Б.М., Киврин В.И. Телевизионные измерительные системы.-М.:Связь,1980.-168с. (с.113-118)\r\n3)	Прэтт, У. Цифровая обработка изображений; Пер. с англ. — М.: Мир,1982.-Кн. 2-480 с. (с. 145-150) (c.641-651)\r\n1.4	Вопросы для самопроверки:\r\n1)	Охарактеризуйте ошибки квантования.\r\n2)	Что такое оптимальное квантование? Приведите амплитудную характеристику оптимального квантователя.\r\n3)	Для чего осуществляется нелинейное предыскажение сигналов перед квантованием?\r\n4)	Выведите формулу для оценки дисперсии ошибки квантования.\r\n5)	Что собой представляет кривая Фридмана?\r\n6)	Смысловое значение кривых Фульца.\r\n7)	В чем смысл понятия о полезных разрядах? Как использовать кривую Фридмана для выбора числа разрядов квантования?\r\n8)	Что такое уравновешенная система квантования?\r\n \r\n2	Лабораторная работа № 2\r\nИсследование методов интерполяции цифровых сигналов изображений\r\nЦель работы – ознакомиться с методами интерполяции цифровых изображений. Выполнить сравнение методов интерполяции изображений на примере масштабирования изображений.\r\nЗадание по работе:\r\n	Изучить теоретическую часть работы.\r\n	Промоделировать методы интерполяции цифрового изображения.\r\n	Сравнить эффективность работы локальных алгоритмов с нулевой, линейной интерполяцией, глобального кубического сплайна и sinc интерполяции.\r\n2.1	Теоретическая часть\r\n2.1.1	Введение\r\nИнтерполяция предназначена для восстановления непрерывных значений амплитуды сигнала изображения по ее дискретным значениям. При масштабировании изображения необходимо заменить двумерный массив амплитуд сигнала, заданный на сетке отсчетов, некоторым другим массивом, положения отсчетов которого определяются коэффициентами масштабирования. Эта задача решается методами интерполяции. Широко применяется разделение интерполяционного преобразования на два независимых - сначала производится интерполяция по строкам, а затем по столбцам. Поэтому рассмотрим интерполяцию изображения по строкам, интерполяция по столбцам производится по аналогичным формулам. \r\nВ идеальном случае дискретизация сигнала f(x) выполняется с частотой Котельникова, вдвое превышающей наивысшую частоту спектра исходного изображения:\r\n ,\r\nгде	 - частота дискретизации по x,  - максимальная частота спектра сигнала по оси x. При этом исходный непрерывный сигнал может быть точно восстановлен путем пространственной фильтрации отсчетов с помощью соответствующего фильтра. Так, например, фильтр, частотная характеристика которого приведена на рисунке 2.1 и описывается выражением:\r\n 	,	 (2.1)\r\nгде 	 -частота сигнала по оси x,\r\nК- масштабирующая постоянная, равная  .\r\n\r\n \r\nРисунок 2.1 Частотная характеристика идеального восстанавливающего фильтра.\r\n\r\nФункция рассеяния точки, или импульсный отклик, данного восстанавливающего фильтра определяется обратным Фурье-преобразованием и имеет вид (рис.2.2):\r\n .\r\n \r\nРисунок 2.2 Импульсная характеристика идеального восстанавливающего фильтра. \r\n\r\nНа рис.2 по оси абсцисс отложены значения  , соответствующие значениям  .\r\nЗначение амплитуды вычисляется по формуле:\r\n .\r\nПри использовании этого фильтра изображение восстанавливается с помощью бесконечной суммы функций вида sinc(x). На практике применяются более простые методы интерполяции. Наиболее распространенным видом интерполяции является полиномиальная интерполяция. При интерполяции полиномами нулевой степени значение   определяется значением функции в ближайшем отсчете.\r\nПри линейной интерполяции (рис.2.3) значение функции интерполируется полиномом первой степени  \r\n .	 (2.1)\r\nФункция должна быть непрерывной:\r\n , i=0,1,..,N-1	 (2.2)\r\nЧтобы убедиться в этом, достаточно подставить в (2.1) x=x[i] для вычисления   и  . Если положить  , то\r\n ,  .\r\nИспользование полиномов низкой степени позволяет избежать многочисленных нестабильностей, возникающих при применении полиномов высоких степеней. Но они не являются гладкими кривыми. Полином третьей степени, называемый кубическим сплайном, описывает кривую наинизшей степени, имеющую точку перегиба и имеющую возможность изгибаться. Обозначим  . Глобальный кубический сплайн должен удовлетворять следующим условиям:\r\n  (xi) = yi, i=0,…,N-1.	 (2.3)\r\n i(x) =   	 (2.4)\r\n =  \r\nНа каждом i-том отрезке [xi; xi+1] коэффициенты полинома ai, bi, ci, di разные.\r\nУсловие непрерывности функции:\r\n i(xi+1) =   (xi+1), i=1,…,N-3	 (2.5)\r\nУсловие непрерывности первой производной функции  (x):\r\n , i=0,…,N-3		 (2.6)\r\nУсловие непрерывности второй производной функции  (x):\r\n , i=0,…,N-3	 (2.7)\r\nУсловие равенства нулю вторых производных функции на концах отрезка [x0; xN-1], т.е. \r\n , 	 (2.8)\r\n .	 (2.9)\r\nВеличины коэффициентов ai, bi, ci, di находятся из решения системы, составленной из уравнений (2.3)-(2.9) \r\nИз (2.4) производные функции   равны\r\n ,\r\n .\r\nОбозначим значение интервала \r\n  , i=0,…,N-2.		 (2.10)\r\nУравнение (2.4) при x=x  для i-го интервала запишется в виде:\r\n .\r\nВ соответствии с (2.3)  =y , следовательно\r\n , i=0,…,N-1.	 (2.11)\r\nИз условия непрерывности функции (2.5):\r\n , i=0,1,…,N-3.	 (2.12)\r\nИз условия непрерывности первой производной (2.6):\r\n  , i=0,1,…,N-3.		(2.13)\r\nИз условия непрерывности второй производной (2.7):\r\n .	 (2.14)\r\nИз (2.8):\r\n .	 (2.15)\r\nИз (2.9):\r\n .	 (16)\r\nУравнения (2.11)-( 2.16) представляют систему уравнений, позволяющую определить неизвестные коэффициенты глобального кубического сплайна. Для нахождения коэффициентов удобно методом последовательного исключения неизвестных свести систему к системе относительно коэффициентов   и решить ее с помощью метода прогонки. Решение системы уравнений (2.11)-( 2.16) приведено в Приложении А. Там же представлен код на языке Паскаль процедуры вычисления коэффициентов кубического сплайна. Приведен алгоритм масштабирования по строкам. Для масштабирования по столбцам необходимо выполнить все описанные процедуры над полученными данными в направлении по столбцам.\r\n2.2	Экспериментальная часть\r\n\r\nВ данной работе исследуют интерполяцию цифровых изображений. Выполняют сравнение методов интерполяции изображений на примере масштабирования изображений. Для выполнения работы необходимо промоделировать интерполяцию цифровых изображений и произвести оценку качества интерполяции.\r\nПорядок выполнения работы\r\n1)	Выбрать исходное 8-ми разрядное низкочастотное изображение. В качестве изображения можно взять изображение «Лена» или другое портретное изображение.\r\n2)	Выполнить прореживание этого изображения через элемент и последующее увеличение в 2 раза по строкам и в 2 раза по столбцам интерполяцией многочленами 0, 1, 3 степени и интерполяцию sinc функцией.\r\n2.1)	Получить изображения ошибок интерполяции как изображения разностей исходного изображения с каждым из восстановленных по методу интерполяции.\r\n2.2)	Оценить гистограмму полученных ошибок, математическое ожидание и дисперсию для каждого метода интерполяции.\r\n2.3)	Оценить пиковое отношение сигнал/шум для интерполированных изображений по формуле:\r\n , дБ,\r\nгде	 =255 для восьмиразрядного представления сигнала,\r\n  - среднеквадратическое значение сигнала ошибки интерполяции.\r\n3)	Применить эти же методы интерполяции к изображению, полученному путем уменьшения изображения с коэффициентами 0<coeffx<1, 0<coeffy<1.\r\n3.1)	Проинтерполировать полученное изображение с коэффициентом 1/coeffx; 1/coeffy.\r\n3.2)	Получить изображения ошибок интерполяции как изображения разностей исходного изображения с каждым из восстановленных по методу интерполяции. Исходя из того, что два процесса интерполяции породили ошибки интерполяции, мощность которых равна   и  , считать среднеквадратическое значение сигнала ошибки интерполяции равным  . Оценить гистограмму полученных ошибок, математическое ожидание и дисперсию для каждого метода интерполяции.\r\n3.3)	Оценить пиковое отношение сигнал/шум для интерполированных изображений.\r\n4)	Выполнить пункты 3.1)-3.3) для высокочастотного (ВЧ) изображения.\r\n5)	Выполнить низкочастотную фильтрацию ВЧ изображения и выполнить для него пункты 3.1)-3.3).\r\n6)	На основании эксперимента построить графики зависимости пикового отношения сигнал/шум от коэффициента масштабирования и метода интерполяции.\r\n7)	Проанализировать полученные результаты, составить отчет о моделировании и выполненных исследованиях, сделать выводы по работе.\r\n2.3	Вопросы для самопроверки:\r\n1)	Что такое интерполяция и когда она применяется?\r\n2)	Охарактеризуйте методы интерполяции. В чем преимущество и недостатки локальных методов интерполяции?\r\n3)	Какую импульсную характеристику имеет оптимальный интерполятор и почему? \r\n4)	Что такое кубический глобальный сплайн? Каким условиям должен удовлетворять интерполяционный полином?\r\n5)	К чему приводит применение низкочастотной фильтрации перед уменьшением изображения и почему?\r\n \r\n3	Лабораторная работа № 3\r\nОсновы фильтрации изображений\r\nЦель работы – ознакомиться с методами цифровой фильтрации изображений в пространственной и частотной областях. Исследовать двумерные линейные и нелинейные фильтры.\r\nЗадание по работе:\r\n	Изучить теоретическую часть работы.\r\n	Промоделировать цифровую пространственную и частотную фильтрацию изображений. Охарактеризовать области применения рассмотренных фильтров.\r\n	Оценить эффективность методов фильтрации. Для этого выполнить расчет пикового отношения сигнал/шум по изображению разностей изображения на выходе фильтра и входного изображения и сравнить оценки для разных методов. \r\n	Исследовать эффективность алгоритмов улучшения изображений при аддитивном наложении нормального шума на сигнал. Рассчитать зависимость коэффициента подавления шума от отношения сигнал/шум для разных методов фильтрации.\r\n3.1	Теоретическая часть\r\n3.1.1	Введение\r\nПри цифровой обработке изображений необходимо устранять геометрические искажения изображений, подавлять шумы различной природы, производить апертурную коррекцию. Такая обработка производится методами цифровой фильтрации изображений. \r\nФильтрация изображений производится в пространственной и частотной области. При пространственной фильтрации изображений преобразование выполняется непосредственно над значениями отсчетов изображений. Результатом фильтрации является оценка полезного сигнала изображения. Традиционная фильтрация в частотной области требует выполнения следующей последовательности преобразований:\r\n	двумерное дискретное преобразование изображения из пространственной области в частотную (например, посредством дискретного преобразования Фурье), \r\n	модификация трансформант (дискретного спектра сигнала изображения), \r\n	обратное двумерное дискретное преобразование, позволяющее получить оценку полезного сигнала изображения в пространственной области.\r\n3.1.2	Пространственная фильтрация изображений\r\n3.1.2.1	Линейная пространственная фильтрация\r\nПространственная фильтрация изображения  ,   позволяет применять фильтры с конечной импульсной характеристикой (КИХ). Поскольку в изображении понятия прошлого и будущего времени становятся условными, мы можем использовать амплитуды отсчетов, как в направлении увеличения индексов, так и в направлении уменьшения индексов. Это позволяет повысить эффективность фильтрации по сравнению с фильтрами с бесконечной импульсной характеристикой (БИХ). \r\nПространственная фильтрация выполняется как операция двумерной свертки импульсной характеристики фильтра  ,   с изображением  :\r\n 	\r\nПрямоугольная область размером  , на которой задана импульсная характеристика, называется маской или ядром фильтра. Рассмотрим, как соотносятся координаты изображения и импульсной характеристики фильтра на примере. \r\nПусть  . Элементы импульсной характеристики фильтра и соответствующей области изображения представлены на рис. 3.1. Начало координат фильтра устанавливается в центр импульсной характеристики, как показано на рис.3.1. Отсчеты импульсной характеристики отражаются относительно начала координат (что равносильно повороту маски на 180 ), и центр маски смещается на  . Отклик фильтра   вычисляется как сумма произведений отсчетов изображения на соответствующие отсчеты повернутой импульсной характеристики. Эта операция выполняется для каждого отсчета изображения. \r\n\r\n	 -1\r\n 0\r\n 1\r\n	 -1\r\n 0\r\n 1\r\n\r\n -1\r\n \r\n \r\n \r\n	 \r\n \r\n \r\n\r\n 0\r\n \r\n \r\n \r\n	 \r\n \r\n \r\n\r\n 1\r\n \r\n \r\n \r\n	 \r\n \r\n \r\nРисунок 3.1 Положение отсчетов импульсной характеристики при свертке с изображением  .\r\nЕсли импульсная характеристика фильтра симметрична, то есть  , то вместо свертки можно выполнять корреляцию:\r\n .				(3.2)\r\nЭта операция не требует отражения импульсной характеристики, а представляет собой вычисление в скользящей по изображению маске фильтра произведений отсчетов изображения на соответствующие коэффициенты фильтра и их суммирование (рис.3.2).\r\nДля обработки краевых эффектов необходимо увеличить изображение по строкам и столбцам на n/2 отсчетов слева и справа и на m/2 отсчетов сверху и снизу. При этом расширение может выполняться разными способами: дополнение нулями, повторением граничных элементов, периодическим повторением ( ,  ), или зеркальным отражением граничных элементов. Размер выходного изображения при этом сохраняется равным размеру входного изображения.\r\n\r\n \r\nРисунок 3.2 Корреляция изображения   с маской  . \r\n\r\nПри построении линейных КИХ фильтров часто используют непараметрический подход. Для уменьшения шумов широко применяются низкочастотные фильтры, поскольку шум представляет собой высокочастотный сигнал. В частности, для низкочастотной фильтрации применяется усреднение сигнала в маске, например, при n=m=3:\r\n ;  ;  .	 (3.3)\r\n	Нормировка необходима для того, чтобы привести значения отклика фильтра к диапазону входных данных. Нормирующий коэффициент определяется из условия равенства 1 суммы всех коэффициентов КИХ в соответствии с уравнением:\r\n .	 (3.4)\r\nЛинейная фильтрация широко применяется при подавлении шумов в изображении, для компенсации неравномерности чувствительности, создания эффектов размытия изображений. Она также широко применяется в задачах выделения контуров на изображении, подчеркивания верхних пространственных частот. В этом случае коэффициенты КИХ фильтра вычисляются на основе дифференцирования амплитуды сигнала, что эквивалентно дискретным разностям амплитуд отсчетов:\r\n ~ 	 (3.5)\r\n ~ 	 (3.6)\r\nПроизводные можно брать не только по горизонтали и вертикали, но и в произвольном направлении. Соответствующие импульсные характеристики фильтров имеют вид:\r\n ,  ,	 (3.7)\r\n ,  .	 (3.8)\r\nКИХ (3.8), формирующие производные в диагональных направлениях, используются в операторе Робертса.\r\nШироко применяется в обработке изображений оператор Собеля:\r\n , .	 (3.9)\r\nДля выделения контуров применяются вторые производные амплитуды сигнала. Оператор Лапласа, имеющий вид:\r\n ,	 (3.10)\r\nможно применить в виде линейного КИХ фильтра с импульсной характеристикой:\r\n .		 (3.11)\r\nЛинейные КИХ фильтры просты в реализации.\r\n3.1.2.2		Нелинейная пространственная фильтрация\r\nВ результате применения линейных сглаживающих фильтров происходит подавление шумов, но одновременно размываются границы между областями с разной амплитудой сигнала. Для уменьшения «смаза» границ разработаны различные нелинейные фильтры. Как и линейные КИХ фильтры, нелинейные фильтры работают в скользящем окне. Но, при линейной фильтрации вычисляется линейная комбинация отсчетов сигнала, а при нелинейной фильтрации выполняются нелинейные преобразования отсчетов сигнала в определяемой маской фильтра окрестности элементов.\r\nНаиболее эффективными по совокупности воздействий: сглаживания шума на однородных участках изображения, сохранения скачков изменения яркости, минимального искажения формы границы, подавления импульсного шума, вычислительной эффективности,- представляются медианный и сигма-фильтр.\r\nМедианный фильтр (предложен Тьюки в 1974 г.) заменяет центральный элемент маски медианой упорядоченной (по невозрастанию или по неубыванию амплитуды) выборки, сформированной из всех амплитуд отсчетов, покрываемых маской фильтра. При нечетном размере маски   медиана является   наибольшим и (  наименьшим значением в выборке. Резкие изменения амплитуды сохраняются медианным фильтром, а импульсная помеха, размер которой  , таким фильтром подавляется. Однако при увеличении маски фильтра можно потерять информацию о малоразмерных областях изображения и произвести искажение границ областей, особенно в угловых положениях. Медианный фильтр относится к ранговым фильтрам. Применяются и другие ранговые фильтры. Так, выбор минимального отсчета в маске (ранг равен 1), позволяет выполнить эрозию, а максимального (ранг равен  ) – дилатацию. Эти операции широко используются в морфологической обработке изображений.\r\nСигма-фильтр предназначен для подавления шумов в изображении с сохранением контуров (резких границ областей). Центральный элемент маски замещается взвешенным средним значением, вычисленным только по тем амплитудам отсчетов, значения которых попадают в  -область относительно яркости центрального элемента.   выбирается либо как среднеквадратическое значение подавляемого шума, либо как среднеквадратическое отклонение в маске, либо   во всем изображении:\r\n ,	 (3.12)\r\nгде S-окрестность составляют те значения координат маски, в которых выполняется наложенное условие:\r\n . 	 (3.13)\r\n -КИХ линейного сглаживающего фильтра, подобного (3.3).\r\nПри   диапазон заменяемых значений составляет  , в случае нормального распределения шума вероятность попадания амплитуды за пределы диапазона равна 4,55%. \r\nПоскольку приведенные КИХ линейных дифференциальных фильтров (уравнения (3.7)-( 3.11)) производят положительные и отрицательные отклики, то выходной сигнал формируется как отклик+ , где L- число разрядов при квантовании амплитуды (при L=8, равно 128). В этом случае фильтр остается линейным. При формировании отклика в виде модуля градиента, что часто используется при формировании контуров изображения, фильтрация становится нелинейной.\r\n3.1.3	Частотная фильтрация изображений\r\nЧастотная фильтрация выполняется в частотной области. Это означает, что при частотной фильтрации выполняются прямое и обратное пространственно-частотное преобразование. Прямое двумерное дискретное преобразование Фурье (ДПФ) преобразует изображение, заданное в пространственной координатной системе  , в двумерное дискретное преобразование изображения, заданное в частотной координатной системе  :\r\n ,	 (3.14)\r\nгде  ,  .\r\nОбратное дискретное преобразование Фурье (ОДПФ) имеет вид:\r\n 	 (3.15)\r\nгде  ,  .\r\nИз (3.14) и (3.15) видно, что ДПФ является комплексным преобразованием. Модуль этого преобразования представляет спектр изображения и вычисляется как корень квадратный из суммы квадратов действительной и мнимой частей ДПФ. Фаза (угол сдвига фазы) определяется как арктангенс отношения мнимой части ДПФ к действительной.\r\nЭнергетический спектр равен квадрату спектра, или сумме квадратов мнимой и действительной частей ДПФ.\r\nВ соответствии с теоремой о свертке, свертка двух функций в пространственной области может быть получена ОДПФ произведения их ДПФ, то есть \r\n .								(3.16)\r\nФильтрация в частотной области позволяет по ДПФ изображения подобрать частотную характеристику фильтра, обеспечивающую необходимое преобразование изображения. Рассмотрим частотные характеристики наиболее распространенных фильтров.\r\n3.1.3.1		Низкочастотные фильтры\r\nЧастотная характеристика идеального низкочастотного (НЧ) фильтра имеет вид: \r\n ,	 (3.17)\r\nгде  - расстояние от центра маски фильтра до отсчета,  - координаты центра маски фильтра,   - заданное неотрицательное число. При размере изображения NxM ,  =N/2,  .\r\nЧастотная характеристика НЧ фильтра Баттерворта (Butterworth) порядка k, подавляющего частоты, отстоящие на расстояние более r (по окружности) от начала координат, имеет вид:\r\n 	 (3.18)\r\nНа рис. 3.3 приведены графики частотной характеристики фильтра Баттерворта при r=70 и k=10.\r\nЧастотная характеристика гауссовского НЧ фильтра имеет вид:\r\n 	 (3.19)\r\nгде  - имеет смысл частоты среза ( ).\r\nЧастотная фильтрация выполняется по алгоритму:\r\n	выполнить двумерное ДПФ входного изображения f(x,y) (подвергаемого фильтрации) размером (NxM), получить F(u,v);\r\n	вычислить передаточную характеристику фильтра в частотной области, например, в соответствии с одной из формул (3.17)-( 3.19), размер матрицы (NxM); выполнить децентрирование характеристики H(u,v); \r\n	выполнить поточечное умножение \r\n   ;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n1.	\r\n\r\n\r\n	(а)								(б)\r\nРисунок 3.3 График частотной характеристики фильтра Баттерворта при r=70 и k=10: (а) – центрированная характеристика; (б) – нецентрированная.\r\n\r\n3.1.3.2	Высокочастотные фильтры\r\n\r\nПо известной передаточной функции НЧ фильтра можно получить передаточную характеристику высокочастотного (ВЧ) фильтра в соответствии с уравнением:\r\n 	 (3.20)\r\nФильтрация выполняется в соответствии с алгоритмом, приведенным в п. 3.1.1.\r\n3.2	Экспериментальная часть\r\nВ данной работе изучаются методы цифровой фильтрации изображений в пространственной и частотной областях. Производится исследование двумерных линейных и нелинейных фильтров. Устанавливается соответствие между частотной и пространственной фильтрацией. Для выполнения работы необходимо промоделировать цифровую двумерную фильтрацию изображений и выполнить анализ синтезированных алгоритмов.\r\nПорядок выполнения работы\r\n1)	Выбрать исходное 8-ми разрядное изображение. В качестве изображения можно взять изображение «Лена» или другое портретное изображение.\r\n2)	Показать, что линейная фильтрация, при использовании одного и того же фильтра, не зависит от координатного пространства преобразования. Для этого выполнить следующее моделирование:\r\n2.1)	Выполнить пространственную низкочастотную фильтрацию изображения, задав импульсную характеристику фильтра. Получить изображение  .\r\n2.2)	Получить частотную характеристику фильтра, применив ДПФ импульсной характеристики.\r\n2.3)	Выполнить частотную фильтрацию этого же изображения. Получить изображение  .\r\n2.4)	Получить изображение разностей двух изображений:  ,\r\nгде  =128 (для 8-ми разрядных изображений) \r\n2.5)	Оценить гистограмму полученных ошибок, математическое ожидание и дисперсию.\r\n3)	Промоделировать низкочастотную линейную фильтрацию в частотной области на примере сглаживающего Гауссова фильтра в соответствии с алгоритмом, изложенным в п. 3.1.3.1.\r\n3.1)	Синтезировать фильтр в частотной области при задаваемом значении  .\r\n3.2)	Выполнить фильтрацию в частотной области.\r\n3.3)	Оценить влияние изменения частоты среза на результат фильтрации изображения. \r\n3.4)	Оценить эффективность подавления аддитивного шума при применении фильтра Гаусса. Для чего выполнить следующее:\r\n3.4.1)	синтезировать изображение с аддитивным нормальным шумом.\r\nвыполнить фильтрацию\r\n3.4.2)	получить разностное изображение.\r\n3.4.3)	оценить математическое ожидание и среднеквадратическое отклонение\r\nвычислить пиковое отношение сигнал/шум \r\n3.4.4)	изменить частоту среза\r\n3.4.5)	повторить пп 3.4.1-3.4.5 для нескольких значений частоты среза\r\n3.4.6)	построить график зависимости пикового отношения сигнал/шум от частоты среза\r\n4)	Исследовать эффективность алгоритмов нелинейной фильтрации в пространственной области. \r\n4.1)	Промоделировать медианную фильтрацию изображения для разных размеров маски фильтра. Описать изменение изображений, подверженных медианной фильтрации. \r\n4.2)	Промоделировать сигма-фильтр\r\n5)	Проанализировать полученные результаты, составить отчет о моделировании и выполненных исследованиях, сделать выводы по работе.\r\n3.3	Вопросы для самопроверки:\r\n1)	Что такое фильтрация изображения, чем линейная фильтрация отличается от нелинейной фильтрации?\r\n2)	Какая связь существует между пространственной и частотной фильтрацией?\r\n3)	Перечислите основные операции линейной фильтрации изображений в частотной области.\r\n4)	Как соотносятся размер маски пространственного фильтра и частота среза в частотной области при использовании одного и того же фильтра?\r\n5)	Какую частотную характеристику имеет идеальный фильтр нижних частот? К каким искажениям на изображении может привести применение идеального НЧ фильтра и чем это объясняется?\r\n6)	Как соотносятся передаточные характеристики ФНЧ И ФВЧ? \r\n7)	В каких целях применяется фильтрация изображений?\r\n \r\n4	Лабораторная работа № 4\r\nСравнительный анализ эффективности вейвлетного и JPEG сжатия изображений\r\nЦель работы – ознакомиться с методами цифрового кодирования изображений.\r\nЗадание по работе:\r\n	Изучить теоретическую часть работы.\r\n	Выполнить дискретное косинусное и вейвлетное преобразование изображений.\r\n	Оценить эффективность методов кодирования. Для этого выполнить расчет пикового отношения сигнал/шум по изображению разностей изображения на выходе декодера и входного изображения и сравнить оценки для двух методов кодирования. Оценить коэффициенты сжатия изображений при использовании этих методов кодирования.\r\n	Исследовать эффективность алгоритмов кодирования изображений в зависимости от спектра кодируемого изображения и в случае аддитивного нормального шума. Рассчитать зависимость коэффициента сжатия от отношения сигнал/шум для разных методов кодирования.\r\n4.1	Теоретическая часть\r\n4.1.1	Введение\r\nОграничения устройств хранения информации, пропускной способности каналов связи, повышение размерности изображений видеодатчиков вызвали бурное развитие методов кодирования изображений для сжатия цифровых сигналов изображений.\r\nПсихофизиологическая избыточность изображений позволила развить эффективные методы сжатия изображений с потерями. К таким методам кодирования относятся сжатие по стандарту JPEG и вейвлетное сжатие. Обе эти схемы основаны на ортогональном преобразовании изображения, последующем кодировании значений полученных спектральных коэффициентов. Впервые эта идея была выдвинута в 1968 г. В процессе ортогональных преобразований изображения f(x,y), имеющего сильные корреляционные связи между смежными отсчетами, происходит процесс декорреляции, так что значения спектральных коэффициентов F(u,v) оказываются практически некоррелированными. В отличие от исходного изображения, для которого характерно в среднем равномерное распределение энергии между его отсчетами, распределение энергии между спектральными коэффициентами резко неравномерно. Основная доля энергии приходится на область низких пространственных частот (спектральные коэффициенты с малыми индексами (u,v)), и лишь небольшая ее часть - на высокие частоты. Последующее квантование спектральных коэффициентов производится с учетом распределения энергии, коэффициенты, имеющие малую амплитуду, квантуются либо на малое число уровней, либо вообще обнуляются. Поскольку средний квадрат шума квантования пропорционален среднему квадрату обнуленного квантованного сигнала, то возникающие при этом искажения изображения невелики.\r\nДальнейшее сжатие достигается применением методов энтропийного кодирования, при котором длина кода обратно пропорциональна частоте появления значений коэффициентов в потоке преобразованного изображения. \r\nПри декодировании изображения вначале по имеющемуся коду восстанавливаются квантованные спектральные коэффициенты, затем они умножаются на коэффициенты, обратные квантующим, чтобы восстановить значения спектральных коэффициентов, и, наконец, путем обратного ортогонального преобразования восстанавливается само изображение.\r\n4.1.2	Кодирование JPEG\r\nПри кодировании по методу JPEG входное изображение разбивается на неперекрывающиеся блоки изображения размером NxN элементов изображения, N=8. Каждый блок подвергается дискретному косинусному преобразованию (ДКП). Поскольку это преобразование является разделимым, то выполняется 2 одномерных преобразования (сначала по строкам, а затем- по столбцам). \r\nОдномерное ДКП выполняется в соответствии с формулой:\r\n ,	 \r\n 	 (4.1)\r\nКоэффициенты каждого блока квантуются в соответствии с матрицей квантования. В стандарте JPEG предложены матрицы квантования, являющиеся необязательными. \r\nКоэффициенты внутри каждого блока выстраиваются в зигзагообразном порядке таким образом, что высокочастотные коэффициенты оказываются в конце последовательности. Последовательность отсчетов представлена в массиве zz:\r\nzz =	    ((0,0),(0,1),(1,0),(2,0),(1,1),(0,2),(0,3),(1,2),\r\n               (2,1),(3,0),(4,0),(3,1),(2,2),(1,3),(0,4),(0,5),\r\n               (1,4),(2,3),(3,2),(4,1),(5,0),(6,0),(5,1),(4,2),\r\n               (3,3),(2,4),(1,5),(0,6),(0,7),(1,6),(2,5),(3,4),\r\n               (4,3),(5,2),(6,1),(7,0),(7,1),(6,2),(5,3),(4,4),\r\n               (3,5),(2,6),(1,7),(2,7),(3,6),(4,5),(5,4),(6,3),\r\n               (7,2),(7,3),(6,4),(5,5),(4,6),(3,7),(4,7),(5,6),\r\n               (6,5),(7,4),(7,5),(6,6),(5,7),(6,7),(7,6),(7,7)) \r\nПоскольку зачастую они равны нулю, то для сокращения потока нулевых коэффициентов используется кодирование длин серий. Затем применяется энтропийный кодер (Хаффмана). Особенностью метода является использование кодов переменной длины, при этом наиболее вероятным символам  присваиваются наиболее короткие кодовые слова, а менее вероятным – длинные. Благодаря такой стратегии код Хаффмана дает минимальную среднюю длину кодовой последовательности, приближающуюся к энтропии источника сообщения. Таблицы кодов Хаффмана приведены в стандарте JPEG.\r\nСхема кодера представлена на рис. 1.\r\nЭтот метод используется для кодирования неподвижных изображений.\r\nДля декодирования операции выполняются в обратном порядке. Вместо ДКП применяется обратное дискретное косинусное преобразование в соответствии с уравнением:\r\n 	 \r\n 	 (4.2)\r\nПример коэффициентов квантования яркостного сигнала представлен в табл. 4.1, а сигнала цветности – в табл. 4.2.\r\n \r\n\r\nТаблица 4.1	Коэффициенты квантования яркостного сигнала\r\n\r\n16	11	10	16	24	40	51	61\r\n12	12	14	19	26	58	60	55\r\n14,	13	16	24	40	57	69	56\r\n14	17	22	29	51	87	80	62\r\n18	22	37	56	68	109	103	77\r\n24	35	55	64	81	104	113	92\r\n49	64	78	87	103	121	120	101\r\n72	92	95	98	112	100	103	99\r\n\r\n \r\nРисунок 4.1 Схема кодера при кодировании по стандарту JPEG\r\n\r\nТаблица 4.2			Коэффициенты квантования сигнала цветности\r\n17	18	24	47	99	99	99	99\r\n18	21	26	66	99	99	99	99\r\n24	26	56	99	99	99	99	99\r\n47	66	99	99	99	99	99	99\r\n99	99	99	99	99	99	99	99\r\n99	99	99	99	99	99	99	99\r\n99	99	99	99	99	99	99	99\r\n99	99	99	99	99	99	99	99\r\n\r\n\r\n4.1.3	Вейвлетное кодирование\r\nВ настоящее время весьма перспективной является компрессия на базе вейвлетного (wavelet) преобразования. Кодирование по вейвлетному алгоритму предполагает выполнение собственно вейвлет-преобразования для декорреляции информации в изображении, квантования полученных коэффициентов преобразования и кодирование кодами переменной длины полученных коэффициентов.\r\nВейвлет–преобразование, в отличие от схем JPEG/MPEG, обеспечивает достижение оптимального компромисса между пространственным и частотным разрешением (их произведение не меньше 1/2). В основу вейвлетного преобразования положена идея обеспечения высокого пространственного разрешения при низком частотном, и, наоборот, высокого разрешения по частоте при низком разрешении по пространству.\r\nПри вейвлетной схеме сжатия используется разложение сигнала по набору базисных функций, при этом широкобазисные функции позволяют исследовать большие области и точно описать низкочастотные детали, а короткобазисные функции позволяют исследовать малоразмерные области (высокочастотные детали). Все базисные функции получаются из одного прототипа (материнского вейвлета) путем его растяжения (или сжатия) и смещения. Двумерное вейвлетное преобразование сводится к двум независимо выполняемым одномерным преобразованиям. \r\nОдномерное вейвлетное преобразование - это совокупность процессов низкочастотной и  высокочастотной фильтрации и децимации. Преобразуемый сигнал подвергается фильтрации с помощью фильтров нижних и верхних частот, которые делят диапазон частот исходного сигнала на две половины. И низкочастотная, и высокочастотная компоненты сигнала, полученные при фильтрации, имеют в два раза более узкую полосу частотных составляющих. Поэтому в соответствии с теоремой Котельникова они могут быть дискретизированы с частотой, равной половине частоты дискретизации исходного сигнала, что означает отбрасывание каждого второго отсчета в направлении фильтрации (по строкам или столбцам). Последующие процессы фильтрации производятся над низкочастотными и высокочастотными изображениями коэффициентов преобразования в соответствии со схемой, представленной на рис.1.\r\nДля цветного изображения выполняется преобразование цветового координатного пространства RGB в пространство YСrCb, поддискретизация компонентов цветности по схеме 4:2:2 и вейвлетное преобразование компонентов Cr и Cb аналогично компоненту яркости. На рис.2 представлено пространственное расположение блоков вейвлетного преобразования на растре изображения. \r\nВейвлетное преобразование не требует формирования блоков сигнала изображения, поэтому артефакты сжатия на его основе более «естественны», т.е. выглядят менее чужеродными на типовых изображениях, чем, например, блочная структура в виде просвечивающей через изображение шахматной доски при JPEG/MPEG-2 (см. рис.3). В 1997 г. фирмой Analog Devices выпущена первая микросхема ADV601 [4], выполняющая вейвлетное преобразование реального времени.\r\nПри этом необходимо отметить, что ни один из рассмотренных методов компрессии не позволяет задать коэффициент сжатия. Поскольку сокращение информации производится на стадии квантования и кодирования кодами переменной длины, то задание одних и тех же коэффициентов квантования приводит к формированию потоков разной длины. Длина выходного потока определяется информацией, содержащейся в изображении. Поддержание выходного потока постоянной скорости достигается за счет управляемой буферизации выходного потока. \r\nПри условии восьмиразрядного квантования входного сигнала пиковое отношение сигнал/шум вычисляется по формуле:\r\n cреднеквадратические значения R,G,B компонентов разностного сигнала.\r\nМногочисленные исследования методов сжатия позволяют утверждать, что при больших коэффициентах сжатия вейвлетный кодер является более эффективным.\r\n4.2	Экспериментальная часть\r\nВ данной работе изучаются методы сжатия изображений по методу JPEG и вейвлетному. Для выполнения работы необходимо промоделировать методы сжатия изображений и выполнить анализ рассмотренных методов.\r\nПорядок выполнения работы:\r\n1)	Выполнить исследования эффективности методов JPEG и вейвлетного кодирования на серии монохромных изображений.\r\nОценку эффективности производить по двум параметрам: коэффициенту сжатия и пиковому отношению сигнал/шум. \r\n1.1)	Выбрать изображение\r\n1.2)	Выполнить кодирование изображения по одному из методов\r\n1.3)	Выполнить декодирование потока\r\n1.4)	Сформировать изображение разности исходного и декодированного изображений.\r\n1.5)	Произвести оценку коэффициента сжатия и пикового отношения сигнал/шум.\r\n2)	Повторить пункты 1.1-1.5 для разных изображений и двух методов.\r\n3)	Построить графики зависимости пикового отношения сигнал/шум от коэффициента сжатия, произвести качественную оценку восстановленных изображений.\r\n4.3	Вопросы для самопроверки:\r\n1)	К каким методам кодирования относятся рассмотренные методы? В чем состоит их главное отличие?\r\n2)	Обеспечивает ли декодирование потоков восстановление исходных изображений?\r\n3)	Назовите основные блоки кодера и декодера по методу JPEG.\r\n4)	Нарисуйте схемы вейвлетного кодера и декодера.\r\n5)	Какие вейвлетные фильтры вы знаете? \r\n6)	Что такое материнский вейвлет? В чем состоит основная идея вейвлетного анализа?\r\n7)	Какое преобразование позволяет полнее представить спектр изображения и почему?\r\n8)	Чем вызваны искажения изображения при кодировании по методу JPEG?\r\n9)	В каких стандартах сжатия используется дискретное косинусное преобразование изображения?\r\n10)	В каких стандартах сжатия используется вейвлетное преобразование изображения?\r\n11)	К каким потерям информации приводит децимация по x,y координатам при выполнении вейвлетного преобразования и почему?\r\n12)	На каком этапе кодирования достигается сжатие информации? \r\n13)	Какие энтропийные кодеры применяются при реализации рассмотренных методов сжатия?\r\n\r\n \r\nВЧ фильтр по X						НЧ фильтр по X\r\nДецимация по X						Децимация по X\r\n_________________________________________________________1 уровень\r\nБлок А				ВЧ фильтр по X			НЧ фильтр по X\r\nДецимация по X			Децимация по X\r\n\r\n________________________________________________________ 2 уровень\r\nВЧ фильтр по Y	НЧ фильтр по Y	ВЧ фильтр по Y	НЧ фильтр по Y\r\nДецим. по Y	Децим. по Y	Децим. по Y	Децим. по Y\r\n\r\nБлок B	Блок C 		Блок D	ВЧ по X	 	НЧ по X\r\nДецим.по X 	Децим. по X\r\n\r\n	Рисунок 4.1 Схема двумерного вейвлетного преобразования черно-белого изображения. Преобразование 2-го уровня выполняется несколько раз. В результате формируются блоки A-N.\r\n \r\n\r\n\r\nРисунок 4.2 Пространственное расположение блоков на растре изображения после вейвлетного преобразования.\r\n \r\na)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nc)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nРисунок 4.3 Фрагменты изображения \"Лена\". Примеры артефактов, производимых при кодировании по вейвлетному алгоритму и алгоритму JPEG при коэффициенте сжатия 60. a) Фрагмент исходного изображения; b) фрагмент декодированного изображения при использовании алгоритма JPEG; c) фрагмент декодированного изображения при использовании вейвлетного алгоритма.\r\n \r\nПРИЛОЖЕНИЕ А\r\nИнтерполяция по методу глобального кубического сплайна\r\nДля нахождения неизвестных коэффициентов глобального кубического сплайна выполним необходимые преобразования.\r\nИз (2.12):\r\n 							(2.17)\r\nОбозначим\r\n 									(2.18)\r\nТогда (17) можно записать в виде:\r\n 								(2.19)\r\nАналогично\r\n 							(2.20)\r\n(19)-(20):\r\n ,\r\nОткуда\r\n 			(2.21)\r\nПодставим (19) в (11):\r\n 				(2.22)\r\nВ соответствии с (14) можно записать:\r\n 								(2.23)\r\nПодставив (14) и (23) в (22), получим:\r\n 		(2.24)\r\nПосле приведения подобных членов:\r\n 				(2.25)\r\nДля получения выражения для коэффициентов   в виде:\r\n 									(2.26)\r\nнеобходимо в (2.25) подставить значение   в соответствии с уравнением (2.26), получим\r\n  		(2.27)\r\nОткуда\r\n 				(2.28)\r\nВ соответствии с (2.26) значения прогоночных коэффициентов из (2.28) равны:\r\n 							(2.29)\r\nНа первом проходе прогонки (прямой ход) находятся коэффициенты в соответствии с (2.29).\r\n \r\nЗатем определяются  ,  , i=1,…,N-3.\r\nНа втором этапе находится решение (обратный ход) коэффициентов кубического полинома  .  ,  . Далее в соответствии с (2.26) вычисляются   при i=N-2,N-3,…,1.\r\nИз (16) \r\n .\r\nИз (14) получим выражение для вычисления коэффициентов  :\r\n , i=0,…,N-3. 						(2.29)\r\nПо полученным значениям   на основании (2.29) вычисляются значения коэффициентов  .\r\nИз (2.19) получим выражение для вычисления коэффициентов  :\r\n , i=0,…,N-2							(2.30)\r\nКоэффициенты   определяются в соответствии с уравнением (2.11).\r\nОпределив коэффициенты интерполирующего глобального сплайна, мы можем восстановить значение сигнала в любой точке x в соответствии с уравнением (2.4). \r\nprocedure GlobalSpline(n:integer; y:TIntegerArray; \r\nvar b,c,d:TDoubleArray);\r\n\r\nvar Li,alpha,beta: TDoubleArray;\r\n    i,j:integer;\r\n    coeff:double;\r\nbegin\r\nif n<4 then exit;\r\nSetLength(Li,n);//выделение памяти под массив вещественных чисел\r\nSetLength(alpha,n);\r\nSetLength(beta,n);\r\nfor i:=0 to n-2 do Li[i]:=y[i+1]-y[i];\r\n//прямой ход прогонки\r\nalpha[1]:=-0.25;\r\nbeta[1]:=0.75*(Li[2]-Li[1]);\r\nfor i:=1 to n-3 do\r\n  begin\r\n  coeff:=1.0/(4.0+alpha[i]);\r\n  alpha[i+1]:=-coeff;\r\n  beta[i+1]:=(3*(Li[i+1]-Li[i])-beta[i])*coeff;\r\n  end;\r\n// обратный ход прогонки\r\nc[0]:=0; c[n-1]:=0;\r\nj:=n-2;\r\nfor i:=1 to n-2 do\r\n  begin\r\n  c[j]:=alpha[j]*c[j+1]+beta[j];\r\n  Dec(j);\r\n  end;\r\n//вычисление остальных коэффициентов\r\ncoeff:=1.0/3.0;\r\nd[n-2]:=-c[n-2]*coeff;\r\nb[n-2]:=Li[n-2]-c[n-2]-d[n-2];\r\nfor i:=0 to n-3 do\r\n  begin\r\n  d[i]:=(c[i+1]-c[i])*coeff;\r\n  b[i]:=Li[i]-c[i]-d[i];\r\n  end;\r\nSetLength(Li,0);\r\nSetLength(alpha,0);\r\nSetLength(beta,0);\r\nend;\r\nДля масштабирования изображения по строкам необходимо определить размер строки в новом масштабе, умножая размер строки исходного изображения sizex на коэффициент масштабирования coeff[\r\nosizex= isizex*coeffx. \r\nЗатем определить шаг по строке \r\nstepx=1/coeffx.\r\nОрганизовать цикл по строкам\r\nчтение строки входного изображения в массив bufIn,\r\nвычислить GlobalSpline2(isizex, bufIn ,bufb,bufc,bufd);\r\nдля каждого элемента строки выходного изображения:\r\nвычислить текущее значение координады по оси x: t:=j*stepX, где   - номер элемента строки выходного изображения;\r\nвыделить целую часть от t:  x:=trunc(t), это значение  ;\r\nвычислить значение   на интервале   по формуле t:=t-x; \r\nдля полученного значения t вычислить значение сплайна: Spl_val:= bufIn[x]+ bufb[x]*t+ bufc[x]*t*t+ bufd[x]*t*t*t;\r\nпривести значение Spl_val к диапазону выходных значений от минимально возможного значения амплитуды сигнала до максимально возможного. При 8-ми разрядном представлении сигнала диапазон выходного сигнала равен [0..255].\r\n \r\nОГЛАВЛЕНИЕ\r\n1	 Лабораторная работа № 1	3\r\n1.1	Теоретическая часть	3\r\n1.1.1	Введение	3\r\n1.1.2	Оптимальное квантование	4\r\n1.1.3	Квантование сигнала при наличии шумов	6\r\n1.2	Экспериментальная часть	8\r\n1.3	Библиографический список	9\r\n1.4	Вопросы для самопроверки:	10\r\n2	Лабораторная работа № 2	11\r\n2.1	Теоретическая часть	11\r\n2.1.1	Введение	11\r\n2.2	Экспериментальная часть	11\r\n2.3	Вопросы для самопроверки:	11\r\n3	Лабораторная работа № 3	11\r\n3.1	Теоретическая часть	11\r\n3.1.1	Введение	11\r\n3.1.2	Пространственная фильтрация изображений	11\r\n3.1.3	Частотная фильтрация изображений	11\r\n3.2	Экспериментальная часть	11\r\n3.3	Вопросы для самопроверки:	11\r\n4	Лабораторная работа № 4	11\r\n4.1	Теоретическая часть	11\r\n4.1.1	Введение	11\r\n4.1.2	Кодирование JPEG	11\r\n4.1.3	Вейвлетное кодирование	11\r\n4.2	Экспериментальная часть	11\r\n4.3	Вопросы для самопроверки:	11\r\nИнтерполяция по методу глобального кубического сплайна	11\r\nОГЛАВЛЕНИЕ	11\r\n\r\n',1202812696265,17),(2,1,22,'пваоврыпварывоа ывааываыв',1202812705125,9),(3,1,4,'32;64;',1202812707015,-28),(4,1,24,'10000 бит;1000 бит;',1202812709843,-27),(5,1,27,'время доступа к информации;',1202812711375,-28),(6,1,31,'оптический диск;',1202812713015,-28),(7,1,38,'защищенную программу;',1202812714375,-28),(8,1,45,'при подключении к web-серверу. зараженному почтовым вирусом;',1202812715890,-28),(9,1,34,'ыфваыфваыфв аывафа',1202812733000,18),(10,1,35,'выпаывапывапвып',1202812739234,7),(11,1,51,'пикселах;',1202812741703,-27),(12,1,58,'голубой. пурпурный, желтый. черный;',1202812743625,-28),(13,1,41,'раывполваырп апрвоыарпвра плваорпловап',1202812749062,6),(14,1,43,'ывфафывафываф',1202812751484,3),(15,1,48,'фывафывафыавфыва',1202812753656,3),(16,1,52,'Компилятор - средство для построения исполняемой программы из одного или нескольких файлов на внутреннем языке.;',1202812755515,-28),(17,1,57,'ыфвафываыфваыфва',1202812758031,3),(18,1,60,'ыфваыфваыва',1202812762296,5),(19,39,12,'011101',1202812617125,28),(20,39,26,'16',1202812630859,14),(21,39,4,'32;',1202812646812,-14),(22,39,24,'',1202812676031,0),(23,39,28,'контроллер;',1202812705343,0),(24,39,31,'RAM-память;',1202812720109,-15),(25,39,38,'',1202812749421,0),(26,39,46,'контролирует важные функции компьютера и пути возможного заражения;',1202812778734,0),(27,39,34,'A and B or A and C',1202812884593,106),(28,40,9,'16\r\n',1202813092156,37),(29,40,17,'92',1202813128859,37),(30,40,11,'редактирование документа;',1202813141578,-17),(31,39,35,'A and B or C',1202813016531,132),(32,40,24,'10 Кбайт;',1202813167890,-3),(33,39,50,'растровой графики;',1202813027015,-19),(34,39,56,'красный, зеленый, синий;',1202813035718,-21),(35,39,39,'15',1202813049203,14),(36,40,28,'драйвер;',1202813197046,0),(37,40,31,'',1202813197296,-29),(38,40,37,'работы с файлами;',1202813211937,-15),(39,40,45,'при открытиии зараженного файла, присланного с письмом по электронной почте;',1202813230140,-11),(40,39,43,'никакой',1202813119703,71),(41,40,34,'a&b&c',1202813294203,64),(42,40,33,'c&b&!a + a&!b',1202813381687,88),(43,40,54,'создания редактирования рисунков;',1202813408500,-3),(44,40,59,'точках на дюйм;',1202813424531,-14),(45,39,48,'a[] = \"1, 2, 3\";\nmin = a[0];\nfor ( i = 0; i < sizeof(a); i++ )\nif  min < a[i]\n{\nmin = a[i];\n} \nend;',1202813309750,190),(46,40,39,'hui',1202813466437,42),(47,39,52,'Компилятор - средство для построения исполняемой программы из одного или нескольких файлов на внутреннем языке.;',1202813332234,-7),(48,40,43,'хуй',1202813521484,55),(49,39,57,'затрудняюсь ответить',1202813388046,56),(50,39,60,'',1202813476765,89),(51,40,48,'int a=1,b=2,c=3;\r\nint min;\r\nif (a > b && a > c)\r\n{\r\n}',1202813796296,275),(52,40,52,'Компилятор - средство для построения исполняемой программы из одного или нескольких файлов на внутреннем языке.;',1202813816546,-9),(53,40,57,'1 1 2 3 5 8 13....хуй',1202813881546,65),(54,40,60,'я не помню...',1202813948125,67),(55,1,6,'',1202994051515,6),(56,1,16,'',1202994057765,7),(57,1,11,'',1202994060500,-27),(58,1,24,'',1202994063031,-27),(59,1,28,'',1202994064484,-28),(60,1,31,'',1202994065109,-29),(61,1,37,'',1202994065812,-29),(62,1,42,'',1202994066515,-29),(63,1,30,'',1202994070703,5),(64,1,33,'',1202994073062,3),(65,1,54,'',1202994074765,-28),(66,1,55,'',1202994075953,-28),(67,1,41,'',1202994076984,1),(68,1,43,'',1202994077593,1),(69,1,47,'',1202994078515,1),(70,1,53,'',1202994079687,-28),(71,1,57,'',1202994081453,2),(72,1,60,'',1202994085937,5),(73,1,9,'',1202995614000,60),(74,1,12,'',1202995681203,60),(75,1,8,'',1202995577500,60),(76,1,12,'',1202995489125,60),(77,1,13,'',1202995740953,60),(78,1,6,'',1202996030859,60),(79,1,2,'',1202995817734,60),(80,1,5,'',1202996564203,60),(81,1,15,'',1202996038234,60),(82,1,2,'',1202995933578,60),(83,1,23,'',1202995673125,60),(84,1,15,'',1202995967083,60),(85,1,17,'',1202995740328,60),(86,1,18,'',1202995636625,60),(87,1,9,'111',1202996092953,60),(88,1,6,'',1202995902125,60),(89,1,18,'',1202995548250,60),(90,1,12,'',1202995838250,60),(91,1,11,'перекодировка символов;',1202995651687,-15),(92,1,19,'',1202995800078,60),(93,1,5,'',1202995626953,60),(94,1,22,'',1202996089984,60),(95,1,4,'',1202995702250,0),(96,1,14,'',1203000134953,60),(97,1,4,'',1202995769453,0),(98,1,20,'',1202995876859,60),(99,1,21,'',1202996623328,60),(100,1,2,'',1202996534828,60),(101,1,4,'',1202995577375,0),(102,1,18,'',1202996097359,60),(103,1,24,'',1202995680875,0),(104,1,4,'',1202995829203,0),(105,1,26,'',1202995992703,60),(106,1,5,'',1202996578828,60),(107,1,4,'',1202996119109,0),(108,1,24,'',1202995731375,0),(109,1,22,'',1202996026208,60),(110,1,24,'',1202995798578,0),(111,1,2,'',1202996249421,60),(112,1,4,'',1202995905984,0),(113,1,26,'',1202996152078,60),(114,1,7,'',1202996652453,0),(115,1,22,'',1202995961250,60),(116,1,6,'',1202995305078,60),(117,1,24,'',1202995606500,0),(118,1,7,'',1202996126484,0),(119,1,23,'',1202995897375,60),(120,1,27,'',1202995710000,0),(121,1,24,'',1202995858328,0),(122,1,11,'',1202996021828,0),(123,1,17,'',1202995686078,60),(124,1,31,'винчестер;',1202995712109,-27),(125,1,24,'',1202996148234,0),(126,1,27,'',1202995760500,0),(127,1,37,'форматирование дискеты;',1202995715171,-27),(128,1,20,'',1203000194078,60),(129,1,4,'',1202996055333,0),(130,1,18,'',1202996593953,60),(131,1,27,'',1202995827703,0),(132,1,24,'',1202995935109,0),(133,1,27,'',1202995635625,0),(134,1,27,'',1202996177359,0),(135,1,28,'',1202995887453,0),(136,1,31,'',1202995789625,0),(137,1,24,'',1202996050953,0),(138,1,4,'',1202995715203,0),(139,1,24,'',1202996155609,0),(140,1,23,'',1202996637953,60),(141,1,7,'',1202995926500,0),(142,1,16,'',1202996308546,60),(143,1,7,'',1203000232203,0),(144,1,24,'',1202996093458,0),(145,1,4,'',1202996623078,0),(146,1,31,'',1202995865828,0),(147,1,28,'',1202995973234,0),(148,1,17,'',1202995364203,60),(149,1,31,'',1202995664750,0),(150,1,31,'',1202996206484,0),(151,1,31,'',1202995919578,0),(152,1,37,'',1202995818750,0),(153,1,27,'',1202996083078,0),(154,1,24,'',1202995747203,0),(155,1,27,'',1202996193734,0),(156,1,11,'',1202996670078,0),(157,1,24,'',1202995964625,0),(158,1,11,'',1202996337625,0),(159,1,24,'',1203000261328,0),(160,1,28,'',1202996122583,0),(161,1,24,'',1202996652203,0),(162,1,37,'',1202995894953,0),(163,1,31,'',1202996002359,0),(164,1,11,'',1202995393328,0),(165,1,37,'',1202995693875,0),(166,1,38,'',1202996235609,0),(167,1,37,'',1202995948703,0),(168,1,42,'',1202995847875,0),(169,1,31,'',1202996112203,0),(170,1,28,'',1202995776328,0),(171,1,31,'',1202996222859,0),(172,1,24,'',1202996699203,0),(173,1,27,'',1202995993750,0),(174,1,24,'',1202996366703,0),(175,1,27,'',1203000290453,0),(176,1,31,'',1202996151708,0),(177,1,28,'',1202996681328,0),(178,1,42,'',1202995924078,0),(179,1,38,'',1202996031484,0),(180,1,24,'',1202995422453,0),(181,1,45,'',1202995723000,0),(182,1,46,'',1202996264734,0),(183,1,42,'',1202995977828,0),(184,1,40,'',1202996141328,0),(185,1,31,'',1202995805453,0),(186,1,38,'',1202996251984,0),(187,1,27,'',1202996728328,0),(188,1,31,'',1202996022875,0),(189,1,27,'',1202996395828,0),(190,1,31,'',1203000319578,0),(191,1,40,'',1202996180833,0),(192,1,31,'',1202996710453,0),(193,1,45,'',1202996060609,0),(194,1,27,'',1202995451578,0),(195,1,46,'',1202996170453,0),(196,1,37,'',1202995834578,0),(197,1,45,'',1202996281109,0),(198,1,31,'',1202996757453,0),(199,1,40,'',1202996052000,0),(200,1,31,'',1202996424953,0),(201,1,37,'',1203000348703,0),(202,1,46,'',1202996209958,0),(203,1,37,'',1202996739578,0),(204,1,31,'',1202995480703,0),(205,1,14,'',1202996839781,3),(206,1,17,'',1202996840281,1),(207,1,7,'',1202996841109,-29),(208,1,24,'',1202996841734,-29),(209,1,28,'',1202996843156,-28),(210,1,45,'',1202995863703,0),(211,1,40,'',1202996786578,0),(212,1,45,'',1202996081125,0),(213,1,12,'',1202996351093,1),(214,1,22,'',1202996351421,1),(215,1,4,'',1202996351718,-29),(216,1,24,'',1202996352562,-29),(217,1,27,'',1202996353531,-29),(218,1,40,'',1202996454078,0),(219,1,31,'',1202996354250,-29),(220,1,37,'',1202996355281,-29),(221,1,45,'',1203000377828,0),(222,1,45,'',1202996768703,0),(223,1,37,'',1202995509828,0),(224,1,4,'8;',1202996174218,0),(225,1,31,'',1202996872328,0),(226,1,42,'',1202996815703,0),(227,1,42,'',1202996483203,0),(228,1,46,'',1202996384453,0),(229,1,42,'',1202995538953,0),(230,1,24,'',1202996203375,0),(231,1,40,'',1202996901453,0),(232,1,45,'',1202995948234,0),(233,1,27,'',1202996220171,-13),(234,1,31,'',1202996220671,-29),(235,1,40,'',1202996221718,-29),(236,1,45,'',1202996222250,-29),(237,1,45,'',1202996923281,-8),(238,1,29,'',1202996924890,2),(239,1,30,'',1202996027000,180),(240,1,29,'',1202996103203,180),(241,1,34,'',1202995902125,180),(242,1,29,'',1202996443859,180),(243,1,30,'',1202996156953,180),(244,1,30,'',1202996239734,180),(245,1,34,'',1202996349578,180),(246,1,30,'',1202996460234,180),(247,1,34,'',1202996389083,180),(248,1,29,'',1202996042828,180),(249,1,34,'',1202996260250,180),(250,1,29,'',1203000556953,180),(251,1,30,'',1202996947828,180),(252,1,29,'',1202996994828,180),(253,1,30,'',1202996662328,180),(254,1,29,'',1202996563578,180),(255,1,33,'',1202996155531,129),(256,1,30,'',1202995718078,180),(257,1,30,'',1202996401375,180),(258,1,33,'',1202997103953,180),(259,1,50,'',1202997133078,0),(260,1,33,'',1202996336078,180),(261,1,33,'',1202997063906,116),(262,1,54,'',1202997065171,-28),(263,1,56,'',1202997067171,-28),(264,1,41,'',1202997067875,1),(265,1,44,'',1202997068406,1),(266,1,48,'',1202997069015,1),(267,1,53,'',1202997069531,-29),(268,1,57,'',1202997070421,1),(269,1,60,'',1202997072171,2),(270,1,58,'',1202997162203,0),(271,1,54,'',1202996365203,0),(272,1,36,'',1202996528703,180),(273,1,58,'',1202996394328,0),(274,1,36,'',1202997173953,180),(275,1,35,'',1202996841453,180),(276,1,35,'',1202995897203,180),(277,1,51,'',1202997203328,0),(278,1,50,'',1202996870578,0),(279,1,54,'',1202995926328,0),(280,1,56,'',1202997232453,0),(281,1,58,'',1202996899703,0),(282,1,59,'',1202995955453,0),(283,1,39,'',1202996043015,88),(284,1,43,'repeat',1202996054687,12),(285,1,41,'',1202997411578,180),(286,1,41,'',1202997078828,180),(287,1,44,'',1202997257953,180),(288,1,2,'456234',1203156315187,16),(289,1,22,'A И B & !C',1203156339968,25),(290,1,28,'Ложь (0).;',1203156348484,9),(291,1,33,'32;',1203156353671,6),(292,1,44,'Архиватор ArchivCreator',1203156380718,27),(293,1,45,'растровой графики;',1203156391281,11),(294,1,52,'Никакое',1203156401265,10),(295,1,56,'Линкер – средство для построения исполняемой программы из одного или нескольких файлов на внутреннем языке.;',1203156408593,8),(296,1,58,'for ( int i = 0; i < 100; i++ )\r\n  printf(\"%d\",i);',1203156456359,48),(297,1,60,'',1203156462937,7),(298,58,15,'',1203156696000,3),(299,58,24,'',1203156698484,3),(300,58,30,'',1203156699625,2),(301,58,38,'',1203156700515,1),(302,58,41,'',1203156701734,2),(303,58,50,'',1203156702531,1),(304,58,53,'',1203156703468,1),(305,58,55,'С – язык программирования низкого уровня, а С++ – язык программирования высокого уровня.;С++ – язык программирования высокого уровня.;С++ – язык программирования низкого уровня.;',1203156707765,5),(306,58,57,'',1203156709109,2),(307,58,65,'',1203156710484,2),(308,58,68,'Потому.',1203156720828,11),(309,1,11,'',1203408672109,3),(310,1,25,'',1203408674390,3),(311,1,27,'',1203408675687,2),(312,1,33,'',1203408678937,4),(313,1,40,'',1203408679875,1),(314,1,47,'',1203408680671,1),(315,1,53,'',1203408681718,1),(316,1,55,'',1203408682546,1),(317,1,58,'',1203408683328,1),(318,1,63,'',1203408683906,1),(319,1,68,'',1203408685968,3),(320,1,11,'',1203408705203,1),(321,1,22,'',1203408706968,2),(322,1,31,'',1203408708187,2),(323,1,36,'',1203408767328,60),(324,1,41,'',1203408771859,5),(325,1,45,'',1203408772625,1),(326,1,52,'',1203408773468,1),(327,1,56,'',1203408774734,2),(328,1,58,'',1203408775328,1),(329,1,66,'',1203408776265,1),(330,1,67,'',1203408777046,1),(331,40,6,'',1203419760671,33),(332,40,23,'',1203419773937,14),(333,40,32,'',1203419781906,8),(334,40,34,'',1203419787156,6),(335,40,42,'',1203419792046,5),(336,40,47,'',1203419796062,4),(337,40,53,'',1203419802031,6),(338,40,56,'',1203419806265,5),(339,40,57,'',1203419819500,14),(340,40,61,'',1203419825468,6),(341,40,68,'',1203419836015,11),(342,42,10,'666',1203425827500,66),(343,36,16,'0110001',1203424868328,12),(344,32,17,'0.91',1203425613765,80),(345,52,7,'10000000',1203425302343,72),(346,55,19,'314',1203425772000,89),(347,42,25,'C=b*a',1203425904562,77),(348,31,9,'',1203425242609,123),(349,36,22,'S= 0.5P*cos a',1203424942187,74),(350,55,24,'1',1203425821421,50),(351,32,23,'neznau',1203425698203,85),(352,55,32,'Предложенное логическое выражение некорректно.;',1203425847859,27),(353,42,29,'Предложенное логическое выражение некорректно.;',1203425974765,71),(354,36,30,'Предложенное логическое выражение некорректно.;',1203425025187,83),(355,55,37,'24000;',1203425906015,59),(356,36,37,'3072;',1203425044562,20),(357,32,32,'Истина (1).;',1203425771312,73),(358,42,36,'10 Кбайт;',1203426031437,57),(359,32,33,'32;',1203425796046,25),(360,52,26,'для выделенно',1203425481500,180),(361,31,21,'',1203425387171,145),(362,52,31,'Ложь (0).;',1203425512953,32),(363,42,43,'Это програма которая ломает или уничтожает систему!',1203426087968,57),(364,42,51,'пикселах;',1203426106593,19),(365,52,37,'24000;',1203425550109,37),(366,55,44,'Уменьшение размера файла,разделение единого файла на части и передачи его через интернет или через средства переноса информации.',1203426039875,134),(367,31,31,'Истина (1).;',1203425490359,103),(368,55,47,'пикселах;',1203426052187,13),(369,42,52,'344',1203426175296,69),(370,55,53,'220',1203426068484,17),(371,31,37,'3000;',1203425531921,42),(372,55,55,'С++ – язык программирования высокого уровня.;',1203426096906,29),(373,36,42,'первое должна быть установлена программа paint. и сенсорная понель с преспособлениями для творчества на компьютере',1203425236562,192),(374,42,56,'Линкер – средство для построения исполняемой программы из одного или нескольких файлов на внутреннем языке.;',1203426215187,40),(375,36,51,'пикселах;',1203425255203,19),(376,55,57,'1',1203426123500,27),(377,42,57,'',1203426256687,42),(378,36,52,'0.789',1203425288953,34),(379,52,44,'архиватор- оборудование для хранения документов(архивов).\r\nможно сохранить нужную информацию,в нужном порядке.\r\n',1203425730406,181),(380,42,61,'Еще на 6-7 стирок',1203426324671,68),(381,36,56,'Компилятор и линкер – разные названия одного и того же.;',1203425348078,60),(382,36,58,'',1203425348265,1),(383,52,49,'голубой, пурпурный, желтый, черный;',1203425780515,51),(384,55,62,'невозможно',1203426257015,134),(385,36,66,'ивану 3 50 коп. петру 3 50 коп.',1203425429296,81),(386,32,43,'Програмы,трояны и.т.п\r\nПытаются загубить операционную систему компьютера.Как живые существа прячутся на жестком диске.Удалить вирусы можно невсегда,бывает анти-вирус их попросту переименовывает.Имеется много видов вирусов,каждый отвечает за отведенный ему оспект.\r\nПример;например виснет при загрузке и так далее,или часто употребляемое в народе выражение синий экран!Часто после серьездных повреждений надо переустонавливать или загружать новый Windows',1203426152671,357),(387,52,53,'в ЭВМ ТРЕТЬЕГО ПОКОЛЕНИЯ ПРИМЕНЯЛИСЬ ЛАМПЫ ВЫСОКОЙ МОЩНОСТИ',1203425868046,88),(388,55,67,'для удобства',1203426346609,90),(389,31,39,'ОС - это система используемая пользователем для работы в какой - либо программе или просто для работы. ',1203425792718,261),(390,32,48,'построения графиков;построения диаграмм;',1203426211625,59),(391,52,55,'С – язык программирования низкого уровня, а С++ – язык программирования высокого уровня.;',1203425900265,33),(392,31,47,'пикселах;',1203425815390,23),(393,32,53,'10 ват',1203426244890,34),(394,42,67,'потому что удобнее достовать! Плюс меньшее давление воздейстувует на круглую форму! И еще легче делать и транспортировать!',1203426531140,207),(395,36,67,'это филосовский вопрос!!!!! Из серии что было раньше яйцо или курица!!!!!!',1203425566437,137),(396,31,53,'',1203425874796,60),(397,32,56,'Компилятор – средство для построения исполняемой программы из одного или нескольких файлов на внутреннем языке.;',1203426294625,50),(398,32,57,'Да',1203426314703,21),(399,31,55,'С++ – язык программирования высокого уровня.;',1203425903250,29),(400,32,62,'Пол гуся не может садиться',1203426363953,50),(401,52,58,'АЛГОРИТМ:\r\n1 СРАВНИТЬ А И В\r\n2 МЕНЬШУЮ ИЗ ПЕРМЕННЫХ ПЕРВОГО ДЕЙСТВИЯ СРАВНИТЬ С С\r\n3 МЕНЬШИЙ РЕЗУЛЬТАТ НАПИСАТЬ В ОТВЕТ',1203426081281,181),(402,31,58,'Алгоритм\r\n1 сравнить алгоритм\r\n2 вычислить\r\n3  ',1203426047375,145),(403,32,67,'Да это вобще не вопрос,просто так',1203426474671,111),(404,52,65,'(ЕСЛИ ВСЕХ УЧЕНИКОВ ВЗЯТЬ ЗА 100%)НАИМЕНЬШЕЕ ЧИСЛО ЧЕЛОВЕК В КРУЖКЕ 10',1203426299125,218),(405,31,66,'Поделить деньги поровну: 7:2=3,5коп. ',1203426251812,205),(406,52,67,'Я ДУМАЮ ЧТО КАНАЛИЗАЦИОННЫЕ ЛЮКИ ДЕЛАЮТ  КРУГЛЫМИ ПОТОМУ;\r\n1 ТРУБЫ КРУГЛЫЕ\r\n2\r\nЕСЛИ БЫ ЛЮК БЫЛ  С ОСТРЫМИ УГЛАМИ ,ТО ВОДА БЫ ПЛОХО ПРОНИКАЛА В ЛЮК',1203426517203,218),(407,31,67,'Я думаю потому что: во - первых- потому что все трубы круглые, мал шанс пораниться, когда трубы круглые это удобно.   ',1203426427500,176),(408,1,6,'',1204628776834,2),(409,1,25,'',1204628778538,2),(410,1,32,'',1204628779709,2),(411,1,37,'',1204628780631,1),(412,1,43,'',1204628781709,2),(413,1,46,'',1204628782553,1),(414,1,54,'',1204628784053,2),(415,1,55,'',1204628784569,1),(416,1,58,'',1204628785366,1),(417,1,66,'',1204628786413,2),(418,1,68,'',1204628787163,1);
UNLOCK TABLES;
/*!40000 ALTER TABLE `statistic` ENABLE KEYS */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

